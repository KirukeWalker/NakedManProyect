<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_god_side</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
global.vidaboss = 10;
movement_speed = 12;
next_xPosition = 0;
next_yPosition = 0;
/* Estados
    0 - Moviendo
    1 - Quieto
*/
status = 0;
//Inciamos la alarma
alarm[0] = 30;
//Inciamos la variable para invocar
can_summon = false;
//
finished = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Invoca enemigo antes de moverse
enemySelection = int64(random(2));
switch(enemySelection){
    case 0:
        enemy = instance_create(x,y,HeavenMelee);
        break;
    case 1:
        enemy = instance_create(x,y,HeavenGoomba);
        break;
}
//Determinamos una posici√≥n y nos movemos hacia ella
status = 0;
next_xPosition = random(room_width);
next_yPosition = random(200); //Que se mantenga en la zona alta
direction = point_direction(x,y,next_xPosition,next_yPosition);
speed = movement_speed;
sprite_index = spr_god_side;
if(next_yPosition &gt; y)
    image_xscale = -2;
else
    image_xscale = 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Cuando llegue al punto para e invoca
if(distance_to_point(next_xPosition, next_yPosition) &lt; 5 &amp;&amp; status == 0){
    status = 1;
    speed = 0;
    alarm_set(0, room_speed * 1);
    sprite_index = spr_god_front;
}

//Concluir nivel
if (finished == true){ 
    //global.muertes += 1;
    obj_fade.fadeIn = false;
    obj_fade.alarm[1] = room_speed * 0.05;
    //instance_destroy();   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
