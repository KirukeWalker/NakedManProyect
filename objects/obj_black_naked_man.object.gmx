<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_black_naked_man</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
randomize();
//
movementSpeed = 10;
action_to_do = 0;
decided = false;
charges_done = 0;
barraging = false;

//Puesta de alarma inicial para empezar a cambiar entre movimientos
alarm_set(0, 60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Alarma para la salva de barritas
bar = instance_create(x, y, obj_vertical_bar);

//
if(barraging = true)
    alarm_set(2, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Decide que acci√≥n hacer
    //Las acciones posibles porbablemente dependan de la vida
    //De momento las dos primeras
//action_to_do = irandom(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
switch(action_to_do){
    //Embestir
    case 0:
        //Primero, decidimos donde ir
        if(decided == false){
            location_number = instance_number(obj_charge_location);
            next_location = instance_find(obj_charge_location, int64(random(location_number)));
            direction = point_direction(x, y, next_location.x, next_location.y);
            speed = movementSpeed + global.vida;
            decided = true;
        }
        //
        if(distance_to_point(next_location.x, next_location.y) &lt; 20){
            speed = 0;
            decided = false;
            charges_done ++;
            if(charges_done &gt; 5){
                charges_done = 0;
                action_to_do = irandom(2);
            }
        }          
    break;
    //Lanzamiento de "disco"
    case 1:
        //Primero, decidimos donde ir
        if(decided == false){
            location_number = instance_number(obj_charge_location);
            next_location = instance_find(obj_charge_location, int64(random(location_number)));
            direction = point_direction(x, y, next_location.x, next_location.y);
            speed = movementSpeed + global.vida;
            decided = true;
        }
        //
        if(distance_to_point(next_location.x, next_location.y) &lt; 20){
            speed = 0;
            if(!instance_exists(obj_big_censor_bar)){
                big_bar = instance_create(x, y, obj_big_censor_bar);
            }
        } 
    break;
    //Lluvia de barras
    case 2:
        //Primero, decidimos donde ir
        if(decided == false){
            location_number = instance_number(obj_charge_location);
            next_location = instance_find(obj_charge_location, int64(random(location_number)));
            direction = point_direction(x, y, next_location.x, next_location.y);
            speed = movementSpeed + global.vida;
            decided = true;
        }
        //
        if(distance_to_point(next_location.x, next_location.y) &lt; 20){
            image_xscale = sign(room_width/2 - x);
            direction = 90 - (image_xscale * 90);
            speed = movementSpeed + global.vida;
            barraging = true;
            alarm_set(2, 1);
        }
        //
        if(barraging == true){
            if(instance_number(obj_vertical_bar) &gt; 3 &amp;&amp; 
                distance_to_object(instance_nearest(x, y, obj_charge_location) &lt; 20)){
                speed = 0;
                barraging = false;
                decided = false;
                action_to_do = irandom(2);
            }
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_final_naked_man">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(action_to_do == 0 &amp;&amp; other.alarm[2] &lt; 1){
    global.vida --;
    other.alam[2] = 5;
    if(global.SOUNDS)
        audio_play_sound(snd_knockback, 3, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
