<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goombaloco = false;
looking_right = true;
direction_facing = 1;
direction_walking = 1; //Dirección en la que anda
msp = 2; //Velocidad a la que se desplaza
skin = spr_goomba;
nivel = room_get_name (room);
vsp = 0;
hsp = 0;
switch (nivel)
{
    case "Nivel_Playa": {
        skin = spr_goomba2
        break;
    }
    case "Nivel_Bosque":{
        skin = spr_goomba3;
        break;
    }   
    case "Nivel_Nieve": {
        skin = spr_goomba4
        break;
    }
}
sprite_index = skin;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goombaloco = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravedad
if(vsp &lt; 10) vsp += 7;
if(place_meeting(x,y+vsp, Terreno) ||
    place_meeting(x,y+vsp, obj_arena) ||
    place_meeting(x,y+vsp, obj_suelo_hojas)
    )
{
    while(!place_meeting(x, y+sign(vsp), Terreno) &amp;&amp;
            !place_meeting(x, y+sign(vsp), obj_arena) &amp;&amp;
            !place_meeting(x, y+sign(vsp), obj_suelo_hojas))
    {
        y+=sign(vsp);
    }
    vsp=0;
}
y += vsp; 
//Controlamos cambio de dirección
//Con las paredes
if(place_meeting(x+msp, y, Terreno) || 
    place_meeting(x+msp, y, obj_arena) ||
    place_meeting(x+msp, y, obj_suelo_hojas)) direction_walking *= -1;
//Con los vacios
if(!place_meeting(x+25, y+1, Terreno) &amp;&amp; 
    !place_meeting(x+25, y+1, obj_arena) &amp;&amp;
    !place_meeting(x+25, y+1, obj_suelo_hojas))direction_walking = -1;
if(!place_meeting(x-25, y+1, Terreno) &amp;&amp; 
    !place_meeting(x-25, y+1, obj_arena) &amp;&amp;
    !place_meeting(x-25, y+1, obj_suelo_hojas))direction_walking = +1;
    
    //Controlamos cambio de sentido/giro
//Con las paredes
if(place_meeting(x+(hsp*direction_facing), y, Terreno) ||
    place_meeting(x+(hsp*direction_facing), y, obj_arena) ||
    place_meeting(x+(hsp*direction_facing), y, obj_suelo_hojas))
{ 
    direction_facing *= -1;
}
//Con el prota
//if(place_meeting(x+1, y, object5)) looking_right = false;
//if(place_meeting(x-1, y, object5)) looking_right = true;
if(place_meeting(x, y, object5)) looking_right *= -1;
//Comprobamos que se pueda volver loco
if (nivel = "Nivel_Nieve" || nivel = "Final_Level" || nivel = "god_room_2"){
    if(distance_to_object(object5) &lt; 100 &amp;&amp; goombaloco = false){
        goombaloco = true;
        msp = 4;    //Ajustamos la velocidad
        alarm[0]=100;
    }
}
//Si esta loco buscamos al prota
if (goombaloco = true) {
    if (x &gt; object5.x) direction_walking = -1;
    else direction_walking = +1;
}
//Volver a la normalidad
if(place_meeting(x+(msp * direction_walking),y,Terreno)) 
{
    goombaloco = false;
    msp = 2;
    direction_walking *= -1;
}
//Movemos el goomba
x += msp * direction_walking;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
