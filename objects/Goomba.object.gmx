<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
grav = 0;
jumping = false;
goombaloco = false;
looking_right = true;
direction_facing = 1;
direction_walking = 1; //Dirección en la que anda
msp = 2; //Velocidad a la que se desplaza
vsp = 0;
hsp = 0;
//Skin por nivel
skin = spr_goomba;
nivel = room_get_name (room);
switch (nivel)
{
    case "Nivel_Playa": {
        skin = spr_goomba2
        break;
    }
    case "Nivel_Bosque":{
        skin = spr_goomba3;
        break;
    }   
    case "Nivel_Nieve": {
        skin = spr_goomba4
        break;
    }
}
sprite_index = skin;
//Cogemos el ancho de la skin
skin_width = sprite_width;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>goombaloco = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(place_meeting(x, y, Agua) &amp;&amp; jumping = false){
    nakedId = collision_rectangle(x-64, y-480, x+64, y, object5, false, true);
    //blockId = collision_line(x, y, x, y-480, obj_solid_terrain, false, true);
    distance_to_objective = 1;
    while(!place_meeting(x, y - distance_to_objective, obj_solid_terrain))
        distance_to_objective ++;
    if(nakedId != noone){
            //Calcula fuerza necesaria
            necessary_force = 0;
            distance_done = 0;
            grav_to_surpass = 0;
            while(distance_done &lt; distance_to_objective){
                //Aplicamos modificador de gravedad
                grav_to_surpass += 0.25;
                necessary_force += grav_to_surpass;
                distance_done += necessary_force;
            }
        vsp -= necessary_force;
        jumping = true;
    }
}

//Comprobamos que se pueda volver loco, y se dirija hacia el prota cuando lo haga
if (nivel = "Nivel_Nieve" || nivel = "Final_Level" || nivel = "god_room_2"){
    //if(distance_to_object(object5) &lt; 100 &amp;&amp; goombaloco = false){
    nakedId = collision_line(x-150, y, x+150, y, object5, false, true);
    if(nakedId != noone){
        goombaloco = true;
        msp = 4;    //Ajustamos la velocidad
        alarm[0]=30;
        if (x &gt; object5.x) direction_walking = -1;
        else direction_walking = +1;
    }
}

//Gravedad
if(vsp &lt; 10){
    if(place_meeting(x, y, Agua))
        grav += 1; 
    else
        grav += 0.25;
    vsp += grav;
}
if(place_meeting(x,y+vsp, obj_solid_terrain))
{
    while(!place_meeting(x, y+sign(vsp), obj_solid_terrain))
    {
        y+=sign(vsp);
    }
    grav = 0;
    vsp = 0;
    jumping = false;
}
y += vsp; 
//Controlamos cambio de dirección
//Con las paredes
if(place_meeting(x+(msp*direction_walking), y, obj_solid_terrain) ||
    place_meeting(x+(msp*direction_walking), y, obj_suelo_hojas)){
    direction_walking *= -1;
    if(goombaloco == true){
        goombaloco = false;
        msp = 2;
    }
}
//Con los vacios
if(!place_meeting(x+(skin_width*direction_walking), y+1, obj_solid_terrain) &amp;&amp; 
    //place_meeting(x, y+1, obj_solid_terrain) &amp;&amp; 
    !place_meeting(x+(skin_width*direction_walking), y+1, obj_suelo_hojas) &amp;&amp;
    goombaloco == false)
    direction_walking *= -1;
/*if(!place_meeting(x-25, y+1, obj_solid_terrain) &amp;&amp; 
    !place_meeting(x-25, y+1, obj_suelo_hojas) &amp;&amp;
    goombaloco == false)
    direction_walking = +1;
 */   

//Con el prota
//if(place_meeting(x+1, y, object5)) looking_right = false;
//if(place_meeting(x-1, y, object5)) looking_right = true;
if(place_meeting(x, y, object5)) 
    looking_right *= -1;

//Orientación del goomba
image_xscale = -direction_walking;
    
//Movemos el goomba
if(jumping == false)
    x += msp * direction_walking;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid_terrain">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mandalo parriba si el tontaina se clava
while(place_meeting(x, y, other)){
    x--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(jumping == true)
    draw_sprite(sprite_index, 0, x, y);
else
    draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
