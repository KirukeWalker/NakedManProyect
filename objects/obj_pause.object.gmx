<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = 0;
pausepos = 0;
//audio_pause_all();
can_switch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
can_switch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Reset the keys
key_up = 0;
key_down = 0;
//Get the stick
if(can_switch == true){
    key_up = gamepad_axis_value(0,gp_axislv) &lt; -0.8;
    key_down = gamepad_axis_value(0,gp_axislv) &gt; 0.8;
    alarm_set(0, 5);
    can_switch = false;
}
//Get the keys
key_up = key_up || keyboard_check_pressed(vk_up) || gamepad_button_check_pressed(0,gp_padu)/* || joystick_ypos(2) &lt; 0.2*/;
key_down = key_down || keyboard_check_pressed(vk_down) || gamepad_button_check_pressed(0,gp_padd)/* || joystick_ypos(2) &gt; 0.2*/;
key_okey = keyboard_check(vk_enter) || gamepad_button_check_pressed(0,gp_face1);
key_pause = keyboard_check(vk_escape) || gamepad_button_check_pressed(0,gp_start);
key_cancel = gamepad_button_check_pressed(0,gp_face2);

//Control para que no vaya to loco (esta así para trabajar también con el joystick)
if(pause == 1 &amp;&amp; !instance_exists(obj_blackScreen)){
    pausepos += -key_up + key_down;
    pausepos = clamp(pausepos, 0, 2); //Aquí cantidad de opciones
    if(instance_exists(obj_Menu1Selector))//Para evitar error
        obj_Menu1Selector.y=view_yview+280+(64*pausepos);
    if(global.SOUNDS == true){
        if(key_up || key_down)
            audio_play_sound(snd_menu_cursor, 10, false);
    }
}
//
if !instance_exists(obj_blackScreen) &amp;&amp; key_pause {
    if (!pause) {
        pause = 1;
        gamepad_set_vibration(0,0,0);
        if ((room=Nivel_Bosque || room=Nivel_Bosque_2)&amp;&amp; instance_exists(obj_lluvia)){
            part_system_automatic_update(obj_lluvia.rain, false);
            part_system_automatic_draw(obj_lluvia.rain, false);
            //part_system_destroy (obj_lluvia.rain)
            //with(obj_lluvia) instance_destroy();
        }
        
        if (room=Nivel_Nieve || room=Nivel_Nieve_2 || room=Room_FinalBoss4_New || room=Room_FinalBoss4_S2){
            part_system_automatic_update(obj_snow.snow, false);
            part_system_automatic_draw(obj_snow.snow, false);
            //part_system_destroy (obj_snow.snow)
            //with(obj_snow) instance_destroy();
        }
        /*if part_system_exists(obj_lluvia.rain) {
            part_system_destroy (obj_lluvia.rain)
        }
        if part_system_exists(obj_lluvia.snow) {
            part_system_destroy (obj_snow.snow)
        }*/
        audio_pause_all();
        instance_deactivate_all(true);
        //instance_activate_object(obj_snow);
        instance_create(view_xview+302,view_yview+340,obj_gamePausedMenu)
        instance_create(view_xview+304,view_yview+340-60,obj_Menu1Selector)
    }
}

if !instance_exists(obj_blackScreen) &amp;&amp; key_okey &amp;&amp; pause=1 &amp;&amp; pausepos=0 {
    pause = 0;
    if ((room=Nivel_Bosque || room=Nivel_Bosque_2)){
        instance_activate_object(obj_lluvia);
        if instance_exists(obj_lluvia){
            part_system_automatic_update(obj_lluvia.rain, true);
            part_system_automatic_draw(obj_lluvia.rain, true);
        }
    }
        
    if (room=Nivel_Nieve || room=Nivel_Nieve_2 || room=Room_FinalBoss4_New || room=Room_FinalBoss4_S2){
        instance_activate_object(obj_snow);
        part_system_automatic_update(obj_snow.snow, true);
        part_system_automatic_draw(obj_snow.snow, true);
        
    }
    with(obj_gamePausedMenu) instance_destroy();
    with(obj_Menu1Selector) instance_destroy();
    pausepos=0;
    instance_activate_all();
    if global.MUSIC=true{
        audio_resume_sound(snd_lava);
        audio_resume_sound(snd_lavaboss_test);
        audio_resume_sound(snd_snow);
        audio_resume_sound(snd_forest);
        audio_resume_sound(snd_city);
        audio_resume_sound(snd_credits);
        audio_resume_sound(snd_intro);
        audio_resume_sound(snd_lavalboss);
        audio_resume_sound(snd_beach);
        audio_resume_sound(snd_sea);
        audio_resume_sound(snd_boss3);
        audio_resume_sound(snd_boss4);
        audio_resume_sound(snd_boss5);
        audio_resume_sound(snd_cielo);
        audio_resume_sound(snd_faseFinal);
           
    }
    if global.SOUNDS=true{
        audio_resume_sound(snd_rayos);
        audio_resume_sound(snd_vents);
        audio_resume_sound(snd_rain);
        audio_resume_sound(snd_jump);
        audio_resume_sound(snd_shoot);
        audio_resume_sound(snd_die);
        audio_resume_sound(snd_knockback);
        audio_resume_sound(snd_menu_cursor);
        audio_resume_sound(snd_menu_selection);
        audio_resume_sound(snd_damaged_enemy);
        audio_resume_sound(snd_boss1_hitting_wall);
        audio_resume_sound(snd_boss1_rising_lava);
        audio_resume_sound(snd_boss2_chain_attack);
        audio_resume_sound(snd_boss5_laser_preparing);
        audio_resume_sound(snd_boss5_laser_shooting);
        audio_resume_sound(snd_boss5_balls);
        audio_resume_sound(snd_thunder);
        audio_resume_sound(snd_woosh);
        audio_resume_sound(snd_destruction);
        audio_resume_sound(snd_boss1_fire);
        audio_resume_sound(snd_magma);
        audio_resume_sound(snd_underwater);
        audio_resume_sound(snd_wind);
        audio_resume_sound(snd_poof);
        //audio_resume_sound();
    }
}

if !instance_exists(obj_blackScreen) &amp;&amp; key_okey 
    &amp;&amp; pause=1 &amp;&amp; pausepos=1 {
    script_execute(scr_menu1options);
    pausepos = 0;
}

if !instance_exists(obj_blackScreen) &amp;&amp; key_okey 
    &amp;&amp; pause=1 &amp;&amp; pausepos=2 {
    audio_stop_all();
    room_goto(Menu);
}

/*if !instance_exists(obj_blackScreen) &amp;&amp; pause==1 &amp;&amp; keyboard_check_pressed(vk_down){
    if pausepos=2 {
        pausepos=0;
        obj_Menu1Selector.y=view_yview+340-60
    }
   else {
        pausepos++;
        obj_Menu1Selector.y=obj_Menu1Selector.y+64
   }
}

if !instance_exists(obj_blackScreen) &amp;&amp; pause==1 &amp;&amp; keyboard_check_pressed(vk_up){
    if pausepos=0 {
        pausepos=2;
        obj_Menu1Selector.y=view_yview+340-60+64*2
    }
    else {
        pausepos--;
        obj_Menu1Selector.y=obj_Menu1Selector.y-64
    }
}*/


/*if (pause = 1) &amp;&amp; ((gamepad_button_check_pressed(0,gp_face3)) || keyboard_check_pressed(ord('Q'))) {
    audio_stop_all();
    audio_play_sound(snd_intro,1,true);
    room_goto(Menu);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pause){
    draw_set_color(c_black);
    draw_rectangle(0,0,room_width,room_height,0);
    draw_set_halign(fa_center);
    draw_set_font(fnt_pause);
    draw_set_color(c_white);
    draw_sprite(spr_pauseTitle,-1,view_xview+305,view_yview+140)
    
    
    //draw_text(view_xview + 230,view_yview + 100,"Game Paused");
    //draw_set_font(fnt_creditos_peque);
    //draw_text(view_xview + 180+50+12,view_yview + 200,"Press Q or          to quit");
    //draw_sprite(spr_x,0,view_xview + 230 + 35,view_yview + 200)
    //if(pussy_mode == true)
    draw_set_color(c_black);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
