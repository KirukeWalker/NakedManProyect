<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>right=0;
left=0;
n=0;
ready=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((gamepad_button_check_pressed(0,gp_padr) || keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord("D"))) &amp;&amp; x&lt;=288 &amp;&amp; x&gt;-3312 &amp;&amp; ready=true){
    right=1;
    left=0;
    ready=false;
    if(global.SOUNDS == true)
        audio_play_sound(snd_menu_cursor, 10, false);
}

if ((gamepad_button_check_pressed(0,gp_padl) || keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord("A"))) &amp;&amp; x&gt;=-3312 &amp;&amp; x&lt;288 &amp;&amp; ready=true){
    right=0;
    left=1;
    ready=false;
    if(global.SOUNDS == true)
        audio_play_sound(snd_menu_cursor, 10, false);
}

if (right=1 &amp;&amp; left=0){
    n+=50;
    x-=50;
    if(n==600){
        right=0;
        ready=true;
        n=0;
    }
}

if (right=0 &amp;&amp; left=1){
    n+=50;
    x+=50;
    if(n==600){
        left=0;
        ready=true;
        n=0;
    }
}

if x=288 levelPosition=0;
if x=288-1*600 levelPosition=1;
if x=288-2*600 levelPosition=2;
if x=288-3*600 levelPosition=3;
if x=288-4*600 levelPosition=4;
if x=288-5*600 levelPosition=5;
if x=288-6*600 levelPosition=6;


if(gamepad_button_check_pressed(0,gp_face1) || keyboard_check_pressed(vk_enter) || joystick_check_button(2,2)) &amp;&amp; ready=true{
    scr_menunivel();
}



if keyboard_check_pressed(vk_escape) || gamepad_button_check_pressed(0,gp_face2) || joystick_check_button(2,1){
    instance_destroy();
    room_goto(Menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_set_font(fnt_creditos_grande);
draw_set_color(c_black);

draw_text(view_xview+40,view_yview+20,x);

if (x==288){
    draw_sprite(spr_arrowright,-1,view_xview+600-20,view_yview+240)
}
else if(x&lt;288 &amp;&amp; x&gt;-3312+200){
    draw_sprite(spr_arrowright,-1,view_xview+600-20,view_yview+240)
    draw_sprite(spr_arrowleft,-1,view_xview+20,view_yview+240)
}
else if(x==-3312){
    draw_sprite(spr_arrowleft,-1,view_xview+20,view_yview+240)
}


draw_text(x+0*600,room_height/2+200,"LEVEL 1");
if global.Nivel1Acceso=1{
    draw_sprite(spr_level1,1,x+0*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+0*600,room_height/2-22)

draw_text(x+1*600,room_height/2+200,"LEVEL 2");
if global.Nivel2Acceso=1{
    draw_sprite(spr_level2,1,x+1*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+1*600,room_height/2-22)

draw_text(x+2*600,room_height/2+200,"LEVEL 3");
if global.Nivel3Acceso=1{
    draw_sprite(spr_level3,1,x+2*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+2*600,room_height/2-22)

draw_text(x+3*600,room_height/2+200,"LEVEL 4");
if global.Nivel4Acceso=1{
    draw_sprite(spr_level4,1,x+3*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+3*600,room_height/2-22)

draw_text(x+4*600,room_height/2+200,"LEVEL 5");
if global.Nivel5Acceso=1{
    draw_sprite(spr_level5,1,x+4*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+4*600,room_height/2-22)

draw_text(x+5*600,room_height/2+200,"LEVEL 6");
if global.Nivel6Acceso=1{
    draw_sprite(spr_level6,1,x+5*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+5*600,room_height/2-22)

draw_text(x+6*600,room_height/2+200,"HARDCORE MODE");
if global.HarcorAcceso=1{
    draw_sprite(spr_level5,1,x+6*600,room_height/2-22);
}
else draw_sprite(spr_levelblock,1,x+6*600,room_height/2-22)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
