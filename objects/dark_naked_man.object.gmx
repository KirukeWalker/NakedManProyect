<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_run</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables heredadas de Naked Man
grav = 1;         //gravity se usa para funciones
hsp = 0;            //velocidad horizontal
vsp = 0;            //velocidad vertical
jumpspeed = 20;     //velocida de salto
movespeed = 4;      //velocidad de movimiento
actual_speed = 0;   //Variable para aceleración
disparo = 0;
nivel = room_get_name (room);
status_knockback = false; //Declaramos knockback
knockback_distance = 5;
//global.vida = 5; //La comparte con Super Naked Man
status_dead = 0;
complete_death = 0;
status_blocking = 0; //Para bloquear
hit = 0;    //Para recibir goles
//Variables propias
oponent = super_naked_man;
direction_looking = 1;          //-1 izquierda, 1 derecha
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj += 1;
alarm[1] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disparo</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Procesos heredados de Naked Man
//Movimiento
if(status_knockback) move = move;      //Si esta con el nockback no usamos las teclas horizontales
else if(disparo &gt; 0) || (status_dead = 1) move = 0;
else move = direction_looking;        //Utilizamos el direction_looking aquí
//Acelaración
if(move != 0 &amp;&amp; actual_speed &lt; movespeed) actual_speed += 1;
else if(move = 0 &amp;&amp; actual_speed &gt; 0)   actual_speed -= 1;
//Movimiento con la aceleración actual
hsp = move * actual_speed;
//Aplicamos gravedad
if(vsp &lt; 10) vsp += grav;       
/*//Salto, Lo revisaremos luego
if(place_meeting(x,y+1,Terreno)             //Habrá que cambiarlo por nubes
    &amp;&amp; key_jump &gt; 0                         //Y que el boton de salto esté pulsado
    &amp;&amp; status_dead = 0)
{
    vsp = -jumpspeed;
}
//Altura de salto variable
if(vsp &lt; 0) &amp;&amp; (!key_jump_held) vsp = max(vsp, -jumpspeed/4)
*/
//Desplazamos al personaje (controlando colisiones)
//Colision con enemigos
if(hit = 1 &amp;&amp; status_knockback == false){   //Esta vez le metemos el knockback desde el ataque
    if(status_dead = 0)
    {
        global.vida += 1;        
        status_knockback = true;
        vsp = -jumpspeed
        move = -image_xscale;
    }
}

//Horizontal collision (Terreno sólido)
if(place_meeting(x+hsp,y,Terreno))
{
    
    while(!place_meeting(x+sign(hsp), y, Terreno))
    {
        x+=sign(hsp);
    }
    hsp=0;
}
x += hsp;
//Control para no salir por los lados
x = clamp(x, 15, room_width-15);

//Vertical collision
if(place_meeting(x,y+vsp, Terreno))
{
  
    while(!place_meeting(x, y+sign(vsp), Terreno))
    {
        y+=sign(vsp);
    }
    vsp=0;
    status_knockback = false;
    hit = false;
}
//Comprobación aparte para suelo atravesable
if(place_meeting(x,y+vsp,obj_suelo_hojas) &amp;&amp; 
!place_meeting(x,y,obj_suelo_hojas) &amp;&amp;
vsp &gt; 0 &amp;&amp; key_down = 0)
{ 
    while(!place_meeting(x, y+sign(vsp), obj_suelo_hojas))
    {
        y+=sign(vsp);
    }
    vsp = 0;
    status_knockback = false;
}

//Comprobación aparte para suelo atravesable
if(place_meeting(x,y+vsp,obj_platform) &amp;&amp; 
!place_meeting(x,y,obj_platform) &amp;&amp;
vsp &gt; 0 &amp;&amp; key_down = 0)
{ 
    while(!place_meeting(x, y+sign(vsp), obj_platform))
    {
        y+=sign(vsp);
    }
    vsp = 0;
}
//Hacemos que descienda con lo sacado de las colisiones del suelo/techo
y += vsp;


//Giro, en principio siempre estará mirando a su oponente
//if (move!=0) image_xscale = move;
if(x &lt; super_naked_man.x)    image_xscale = 1;
else                        image_xscale = -1;

//Animaciones
if(vsp = 0)
{
    if(status_dead = 1 &amp;&amp; complete_death = 0) {
        sprite_index = spr_death;
        if(image_index = 79) {
            sprite_index = total_death;
            complete_death = 1;
        }
    } 
    else if (complete_death = 0){
    
        if(move != 0) sprite_index =spr_run; 
        else 
        {
            if(disparo &gt; 0) sprite_index = spr_shoot;
            else sprite_index = spr_idle;
        }
    }
}
else
{
    if (disparo &gt; 0) sprite_index = spr_jumpshoot;
    else if(vsp &lt; 0) sprite_index = spr_jump;
    else if (vsp &gt; 0) sprite_index = spr_fall;
}

//Control de muerte
if(global.vida &gt;= 10)
{
    status_dead = 1;  
}
else if(global.vida &lt;= 0){
    //Aquí estaría bien una animación riendose de ti o algo
}

//Realizamos el ataque melée
if (distance_to_object(super_naked_man) &lt; 15)  {
    if(disparo = 0 &amp;&amp; status_dead = 0) {
        ataque = instance_create(x,y,obj_medium_attack);
        //proyectil.direction = 90-(90*image_xscale);
        ataque.image_xscale = image_xscale;
        ataque.attack_user = 1;  //Le decimos que lo realiza Dark Naked Man
        //De momento utilizarmos la cadencia del disparo
        disparo = 1;
        alarm[0] = 15;
    }
}
//Procesos propios
if(x &lt; oponent.x)   direction_looking = 1;
else                direction_looking = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
