<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss1_move</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>spr_boss1_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
global.vidaboss = 20;
movement_speed = 3;
sprint_speed = 10;
grav = 0;
amount_of_shoots = 5;
time_between_shoots = 15;
shoot_counter = 0;
shooting = false;
direction_looking = -1;
time_to_shoot = false;
apply_gravity = true;
platform_fire_created = false;
phase = 0;
last_round = false;
//Get the player
player = instance_find(object5, 0);
//Get the pointer
pointer = instance_find(obj_shoot_pointer, 0);
//Instance the "door"
block[0] = instance_create(480, 416, Terreno);
block[1] = instance_create(480, 448, Terreno);
block[2] = instance_create(480, 480, Terreno);
block[3] = instance_create(512, 416, Terreno);
block[4] = instance_create(512, 448, Terreno);
block[5] = instance_create(512, 480, Terreno);
/*Status
    0 - Waiting
    1 - Closing the door
    2 - 
*/
status = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Make the shoot
pointer.x = shoot_counter * 96 + 640;
pointer.y = 576;
fireball = instance_create(x + (30 * direction_looking), y, obj_fireball);
shooting = false;
shoot_counter ++;
//Finalizar ronda disparos y pasar a otro estado
if(shoot_counter &gt; 4){
    shoot_counter = 0;
    //Ve a la ronda dependiendo de sgrwsgrs
    if(last_round == false)
        status = 5;
    else{
        status = 2;
        apply_gravity = false;   
    }
    sprint_speed += 1;
    time_to_shoot = false;
    //apply_gravity = false;
    
    //Borra el fuego de las plataformas
    with(obj_fire_splash) instance_destroy();
    /*for(i = 0; i &lt; array_length_1d(fire); i++){
        with(fire[i]) instance_destroy();
    }*/
    
    platform_fire_created = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravedad
if(vspeed &lt;= 10 &amp;&amp; apply_gravity == true){
    grav += 2;
    vspeed += grav;
}

//Comportamiento dependiendo de los estados
switch(status){
    //Check the entrace of the player in the proper room
    case 0:
        if(player.x &gt; 544){
            status = 1;
            health_bar = instance_create(10, 10, obj_healthbar_forAll);
            //
            obj_camera2.following_player = false;
            obj_camera2.objectiveX = 832;
            obj_camera2.objectiveY = 384;
        }
    break;
    //Close the "door"
    case 1:
        if(block[0].y &lt; 512){
            for(i = 0; i &lt; array_length_1d(block); i++){
                block[i].y += 16;
            }
        }
        else
            status = 2;
    break;
    //Intenta embestir al prota
    case 2:
        if(abs(hspeed) &lt; sprint_speed){
            hspeed += direction_looking;
        }
        if(last_round == false){
            //Segun la vida que pierda pasamos a una fase u otra
            if(global.vidaboss &lt;= 5 &amp;&amp; phase == 2){
                script_execute(scr_create_flames);
                phase = 3;
            }
            if(global.vidaboss &lt;= 10 &amp;&amp; phase == 1){
                status = 3;
                phase = 2;
            }
            else if(global.vidaboss &lt;= 15 &amp;&amp; phase == 0){
                status = 3;
                phase = 1;
            }
        }
        else{//Para el segundo asalto
            if(global.vidaboss &lt;= 5 &amp;&amp; phase = 6){
                status = 3;
                phase = 7;
            }
            if(global.vidaboss &lt;= 10 &amp;&amp; phase = 5){
                status = 3;
                phase = 6;
            }
            if(global.vidaboss &lt;= 15 &amp;&amp; phase = 4){
                status = 3;
                phase = 5;
            }
        }
    break;
    //Ve a una de las plataforas de los lados y sube
    case 3:
        if(x &lt; 600 || x &gt; 1060){
            hspeed = 0;
            direction_looking = sign(800 - x);
            vspeed -= 40;
            status = 4;
        }
    break;
    //Shoot some balls to the floor
    case 4:
        if(platform_fire_created == false){
            script_execute(scr_create_flames);
            //
            platform_fire_created = true;
        }
        if(shooting == false){
            apply_gravity = true;
            shooting = true;
            alarm_set(0, time_between_shoots);
        }
    break; 
    //Baja de la plataforma
    case 5:
        if(y &gt; 560){
            status = 2;
            apply_gravity = false;
        }
    break;  
    //"Morir"
    case 6:
        obj_fade.fadeIn = false;
        y = 1000;
        //Fade in de nuevo
        if(obj_fade.alpha == 1){
            global.vidaboss = 1;
            last_round = true;
            obj_fade.fadeIn = true;
            with(Lava) instance_destroy();
            //Crea la piscina de lava
            for(i = 0; i &lt; 18; i++){
                for(j = 0; j &lt; 18; j++){
                     lava[i, j] = instance_create(i * 32 + 544, j * 32 + 640, Lava);
                }
            }
            obj_terreno_profundo.depth = -3;
            Lava.depth = -2;
            Terreno.depth = -1;
            depth = -1;
            lava_reference = instance_find(Lava, 0);
            status = 7;
        }
    break; 
    //Subida de lava y de vida
    case 7:
        if(lava_reference.y &gt; 480){
            for(i = 0; i &lt; 18; i++){
                for(j = 0; j &lt; 18; j++){
                     lava[i, j].y -= 0.5;
                }
            }
        }
        if(global.vidaboss &lt; 20)
            global.vidaboss += 0.2;
        if(lava_reference.y == 480 &amp;&amp; global.vidaboss == 20){
            y = 560;
            x = 768;
            status = 3;
            phase = 4;
        }
    break;
    //
}
//Control colisiones vertical (solo hacia abajo)
if(place_meeting(x, y + vspeed, obj_solid_terrain) &amp;&amp; status != 5){
    while(place_meeting(x, y + vspeed, obj_solid_terrain)
        &amp;&amp; vspeed &gt; 0){
        vspeed --;
    }
    grav = 0;
}
//Control colisiones horizontal (cuando embiste)
if(place_meeting(x + hspeed, y, obj_solid_terrain) &amp;&amp; status == 2){
    hspeed = 0;
    direction_looking *= -1;
    //Temblor de cámara
    obj_camera2.tremble = true;
    obj_camera2.alarm[0] = 10;
    obj_camera2.alarm[1] = 5;
}
//Encaramiento
image_xscale = -direction_looking;
//"Morir"
if(global.vidaboss == 0 &amp;&amp; last_round == false){
    status = 6;
    depth = -2;
    with(obj_fire_splash) instance_destroy();
}
//Morir del todo
if (global.vidaboss == 0 &amp;&amp; last_round == true)
{ 
    ini_open("SystemNM.txt")
    ini_key_delete("NhTPahPmx","MeFjgPFREndg")
    ini_write_string("NhTPahPmx","MeFjgPfREndg","uFscFjgWfjE");
    ini_close()
    global.muertes += 1;
    //obj_fade.fadeIn = false;
    obj_fade_white.fadeIn = false;
    //obj_fade.alarm[1] = room_speed * 0.05;
    instance_destroy();   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cacota">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Destruye el proyectil y réstale vida
if(status != 0){
    with(other)
        instance_destroy();
    global.vidaboss -= 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Show boss stuff
//draw_text(30, 30, x);
//draw_text(30, 50, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
