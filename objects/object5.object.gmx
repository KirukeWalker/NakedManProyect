<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 1;         //gravity se usa para funciones
hsp = 0;            //velocidad horizontal
vsp = 0;            //velocidad vertical
jumpspeed = 16;     //velocida de salto
movespeed = 6;      //velocidad de movimiento
actual_speed = 0;   //Variable para aceleración
disparo = 0;
nivel = room_get_name (room);
status_knockback = false;   //Declaramos knockback
invincible = false;         //Separamos invecibilidad del knockback
knockback_distance = 5;
knockback_duration = 30;
global.vida = 3; //Vida del personaje
status_dead = 0;
complete_death = 0;
status_sliding = false; //El personahe se desliza
gamepad_set_axis_deadzone(0,0.7)

//Seteamos cronómetro
reloj = 0;
alarm[1]=30;
cronometro = 0;
switch (nivel)
{
    case "Nivel_1": {
        cronometro = 1;
        break;
    }
    
    case "Nivel_Playa": {
        cronometro = 2;
        break;
    }
    
    case "Nivel_Bosque": {
        cronometro = 3;
        break;
    }
    case "Nivel_Nieve": {
        cronometro = 4;
        break;
    }
    case "Final_Level": {
        cronometro = 5;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Deshacemos el knockback (para el agua)
status_knockback = false;

//Deshacemos la invencibilidad
invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj += 1;
alarm[1] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disparo</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the players input
//key_right = keyboard_check(ord("D"));   //Alternativa para las letras
key_right = keyboard_check(vk_right) || (gamepad_axis_value(0,gp_axislh) &gt; 0) || (gamepad_button_check(0,gp_padr) || joystick_xpos(2) &gt; 0.2);   //Para detectar la flecha derecha
key_left = -(keyboard_check(vk_left) || (gamepad_axis_value(0,gp_axislh) &lt; 0) || (gamepad_button_check(0,gp_padl) || joystick_xpos(2) &lt; -0.2));     //Para detectar la flecha izquierda
key_jump = keyboard_check_pressed(vk_space) || (gamepad_button_check_pressed(0,gp_face1) || joystick_check_button(2, 3));
key_jump_held = keyboard_check(vk_space) || (gamepad_button_check(0,gp_face1) || joystick_check_button(2, 3));
key_down = keyboard_check(vk_down) || (gamepad_axis_value(0,gp_axislv) &gt; 0) || (gamepad_button_check(0,gp_padd) || joystick_ypos(2) &gt; 0.2);

//React to imputs
if(status_knockback) 
    move = move;      //Si esta con el nockback no usamos las teclas horizontales
else if(disparo &gt; 0) || (status_dead = 1) 
    move = 0;
else 
    move = key_left + key_right;        //Aplicamos los valores de las teclas de dirección
//Acelaración
if(move != 0 &amp;&amp; actual_speed &lt; movespeed) 
    actual_speed += 1;
else if(move = 0 &amp;&amp; actual_speed &gt; 0)   
    actual_speed -= 1;
//Movimiento con la aceleración actual
if (status_sliding = false){
    hsp = move * actual_speed;
}
else 
    hsp = movespeed * 3 * image_xscale;
//Aplicamos gravedad
if(vsp &lt; 10) 
    vsp += grav;       
//Salto
if((
    place_meeting(x,y+1,obj_solid_terrain) ||
    (place_meeting(x,y+1,obj_suelo_hojas) &amp;&amp; !place_meeting(x, y, obj_suelo_hojas)) ||
    place_meeting(x,y,Agua)      ||       //Comprobamos que este en el agua
    place_meeting(x,y+1,obj_mobile_platformH) ||
    place_meeting(x,y+1,obj_mobile_platformV)
    ) 
    &amp;&amp; key_jump &gt; 0                         //Y que el boton de salto esté pulsado
    &amp;&amp; status_dead = 0)
{
    vsp = -jumpspeed;
    audio_play_sound(snd_jump, 1, false);
}
//Altura de salto variable
if(vsp &lt; 0 &amp;&amp; !key_jump_held) 
    vsp = max(vsp, -jumpspeed/4);

//Desplazamos al personaje (controlando colisiones)
//Comprobamos suelo hielo
if(place_meeting(x,y+1,obj_hielo))
{
    //Character speed during the slide
    status_sliding = true;    
}
else 
    status_sliding = false

//Horizontal collision (Terreno sólido)
if(place_meeting(x+hsp,y,obj_solid_terrain))
{
    
    while(!place_meeting(x+sign(hsp), y,obj_solid_terrain))
    {
        x+=sign(hsp);
    }
    hsp=0;
}
x += hsp;
//Control para no salir por los lados
x = clamp(x, 15, room_width-15);

//Vertical collision
if(place_meeting(x,y+vsp,obj_solid_terrain))
{
  
    while(!place_meeting(x,y+sign(vsp),obj_solid_terrain))
    {
        y+=sign(vsp);
    }
    vsp=0;
    status_knockback = false;
}
//Comprobación aparte para suelo atravesable
if(place_meeting(x,y+vsp,obj_suelo_hojas) &amp;&amp; 
!place_meeting(x,y,obj_suelo_hojas) &amp;&amp;
vsp &gt;= 0 &amp;&amp; key_down = 0)
{ 
    while(!place_meeting(x, y+sign(vsp), obj_suelo_hojas))
    {
        y+=sign(vsp);
    }
    vsp = 0;
    status_knockback = false;
}

//Hacemos que descienda con lo sacado de las colisiones del suelo/techo
y += vsp;


//Giro
if (move != 0 &amp;&amp; status_sliding = false) 
    image_xscale = move;

//Animaciones
if(vsp = 0)
{
    if(status_dead = 1 &amp;&amp; complete_death = 0) {
        sprite_index = spr_death;
        if(image_index = 79) {
            sprite_index = total_death;
            complete_death = 1;
        }
    } 
    else if (complete_death = 0){    
        if(move != 0) 
            sprite_index = spr_run; 
        else 
        {
            if(disparo &gt; 0) sprite_index = spr_shoot;
            else sprite_index = spr_idle;
        }
    }
}
else
{
    if (disparo &gt; 0) sprite_index = spr_jumpshoot;
    else if(vsp &lt; 0) sprite_index = spr_jump;
    else if (vsp &gt; 0) sprite_index = spr_fall;
    //sprite_index = spr_jump
}
//Control de muerte
if (position_meeting (x,y,Lava)) 
    global.vida = 0 ;
if (position_meeting (x,y,obj_acido)) 
    global.vida = 0;
if (position_meeting (x,y,obj_pincho)) 
    global.vida = 0;
if (y &gt; room_height) 
    global.vida = 0;
//Control de negativos
if (global.vida &lt; 0) 
    global.vida = 0;

if(global.vida &lt;= 0 &amp;&amp; status_dead == 0)
{
    audio_play_sound(snd_die, 1, false);
    status_dead = 1;
}

//Entrando al agua

if(place_meeting(x,y,Agua))
{
    grav = 0.2; 
    jumpspeed = 8;
    movespeed = 1.5;
}

//Saliendo del agua

if(!place_meeting(x,y,Agua))
{
    grav = 1; 
    jumpspeed = 16;
    movespeed = 6;
}

//Disparo en codigo
if keyboard_check(ord('C')) || (gamepad_button_check(0,gp_face2)  || joystick_check_button(2, 2))  {
    if(disparo = 0 &amp;&amp; status_dead = 0) {
        audio_play_sound(snd_shoot, 1, false);
        proyectil = instance_create(x,y+3,obj_cacota);
        proyectil.speed = 15;
        proyectil.direction = 90-(90*image_xscale);
        proyectil.image_xscale = image_xscale;
        //if image_xscale = 1 proyectil.direction = 0;
        //else                proyectil.direction = 180;
        disparo = 1
        alarm[0] = 15;
    }
}
//Cronoemtros para logros
if ((cronometro = 1) &amp;&amp; (reloj&lt;60) &amp;&amp; (place_meeting(x,y,obj_portal))) {
    ini_open("SystemNM.txt");
    ini_key_delete("NhTPahPmx","rgShhbDRrsEF")
    ini_write_string("NhTPahPmx","rgSHhbDRrsEF","sBedfESFJkm")
    ini_close();
    }
if ((cronometro = 2) &amp;&amp; (reloj&lt;60) &amp;&amp; (place_meeting(x,y,obj_portal))) {
    ini_open("SystemNM.txt");
    ini_key_delete("NhTPahPmx","ygnYRbdETjSa")
    ini_write_string("NhTPahPmx","ygNYRbdETjSa","rdklGUytnfR")
    ini_close();
    }
if ((cronometro = 3) &amp;&amp; (reloj&lt;60) &amp;&amp; (place_meeting(x,y,obj_portal_bosque))) {
    ini_open("SystemNM.txt");
    ini_key_delete("NhTPahPmx","Esyi4nne5NrE")
    ini_write_string("NhTPahPmx","Esyi4Nne5NrE","vhbkybtdRVS")
    ini_close();
    }
if ((cronometro = 4) &amp;&amp; (reloj&lt;60) &amp;&amp; (place_meeting(x,y,obj_portal_nieve))) {
    ini_open("SystemNM.txt");
    ini_key_delete("NhTPahPmx","jrTbDRETSJrN")
    ini_write_string("NhTPahPmx","jrTbDReTSJrN","DRybSETAHNY")
    ini_close();
    }
if ((cronometro = 5) &amp;&amp; (reloj&lt;60) &amp;&amp; (place_meeting(x,y,obj_portal))) {
    ini_open("SystemNM.txt");
    ini_key_delete("NhTPahPmx","YFrBuGdETSYU")
    ini_write_string("NhTPahPmx","YFrBuGdeTSYU","rtwKBTlgjyV")
    ini_close();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss_interactor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(invincible == false &amp;&amp; status_dead == false){
    if(other.attacking == true){
        script_execute(scr_knockback);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="FinalBoss5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If the boss is not teleporting
if(invincible == false &amp;&amp; status_dead == false){
    if(other.teleporting == false){
        script_execute(scr_knockback);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Melee">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(invincible == false &amp;&amp; status_dead == false){
    if(other.status_dead == 0){
        script_execute(scr_knockback);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="serpiente_to_flama">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
if(invincible == false &amp;&amp; status_dead == false){
    if(other.status_dead == 0){
        script_execute(scr_knockback);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Colision con enemigos
if(invincible == false &amp;&amp; status_dead == 0){            
    script_execute(scr_knockback);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
